#include "stdafx.h"

// ========================================================
//	예제 정점 셰이더
// ========================================================

/*
	- 정점 셰이더 단계에서 셰이더는 HLSL(High Level Shading Language)라는 언어로 작성한다.
	- 셰이더 프로그램은 텍스트 파일로 작성한다.

	셰이더 함수
		- 셰이더는 하나의 함수로 제작한다.
		- 셰이더 함수에서 여러개의 값을 돌려주기 위해서는 매개변수를 out을 수식하여 그 변수에 대입하면 된다.
		- 셰이더 변수 : 뒤에 있는 것은 매개변수 의미소로 Input Signature에서 작성한 배열 원소가 매개변수 의미소와 1대 1 대응한다.
		- out을 수식한 매개변수도 : 뒤에 의미소가 있는데 이를 이용하여 다음 단계인 기하 셰이더(GS)나 픽셀 셰이더(PS) 단계에 해당 변수를 보낼 수 있다.
		- SV_POSITION와 같이 SV_가 붙은 의미소는 System Value 의미소를 의미한다.
		- SV_가 붙은 의미소 이외의 의미소는 마음대로 이름을 지을 수 있다.
		- SV_POSITION은 정점의 위치를 담는 의미소로 법선 벡터, 텍스처 좌표와 같은 특성과 달리 다른 방식으로 처리된다.
	
	정점을 국소 공간에서 동차 절단 공간으로 변환
		1. 1 x 4 행렬을 만들기 위해서 정점 3차원 위치에 네번째 성분에 1.0f를 추가한다.
		2. 월드 행렬, 뷰 행렬, 동차 행렬이 곱해진 WorldViewProjection 행렬을 1 x 4행렬과 mul을 통해서 곱한다.
		3. SV_POSITION 의미소를 담은 매개변수에 곱해진 값을 반환하여 다음 단계에 공급한다.

			SV_POSITION 변수 = mul(float4(POSITION, 1.0f), WorldViewProjection 변수);

		- WorldViewProjection 변수는 cbuffer를 통해서 가져오는데 이때 cbuffer는 상수 버퍼라고 한다.

	- 의미소를 하나하나 전부 매개변수로 받으면 매개변수 목록이 길어질 수 있기 때문에 구조체를 만들어서 사용할 수도 있다.
	- 투영 변환은 기하 셰이더(GS)를 사용할 경우 기하 셰이더에서 할 수 있으며 기하 셰이더를 사용하지 않을 경우 무조건 정점 셰이더 단계에서 투영 변환을 해줘야 한다.
	- 원근 나누기는 하드웨어가 스스로 수행한다.
*/