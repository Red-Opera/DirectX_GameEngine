#include "stdafx.h"

// ========================================================
//	반영광 조명
// ========================================================

/*
	반영광
		- 반영 반사는 거울 반사(Specular Reflection)이라고 한다.
		- 원뿔 방향으로 반사되기 때문에 반영광을 바라보는 시점에 따라서 빛이 인식이 안될 수도 있다.
		- 시점에 의해 조명 계산도 달라지기 때문에 시점에 의존한다.

	시점에 따른 빛의 세기
		입사각과 같은 반사각으로 이루어진 벡터 r, 반사 지점에서 시야로 가는 방향 v, r과 v사이 각도: Φ

		- 반영광의 세기는 Φ에 따라 달라진다.
		- Φ가 점점 커질 수록 반영광의 세기는 점점 줄어들고 Φ가 0일 경우 최대가 된다.
		- Φ에 따른 그래프는 람베르트의 코사인 법칙와 같이 비슷한 형태를 가지고 있다.
		- 추가적으로 이 그래프에 1이상의 거듭제곱을 함으로써 매끄럽고 빛나는 정도를 다룰 수 있다.
		- 거듭제곱이 작을수록 매끄럽고 빛나는 표면을 만들 수 있다.
*/

// ========================================================
//	반영광의 양
// ========================================================

/*
	k : 반영광 코사인 법칙, l : 광원 세기, m : 표면이 반사하는 반영광의 양

	c(반영광) = k º l ⊗ m = kS

	p : 코사인 함수의 거듭제곱
	k = (L º n > 0) ? max(v º r, 0)ᴾ : 0

	- 분산광이 없지만 반영광이 생기는 것을 방지하기 의해서 반영광이 0이하일 경우 반영광을 0으로 설정한다.
*/

// ========================================================
//	최종 빛
// ========================================================

/*
	Light = 주변광으로 들어오는 빛 º 주변광 흡수율 + 
			분산광의 코사인 법칙 º 분산광으로 들어오는 빛 ⊗ 분산광 흡수율 + 
			반영광 코사인 법칙 º 반영광으로 들어오는 빛 ⊗ 반영광 흡수율

			분산광의 코사인 법칙 = max(빛의 세기 º 반사되는 뱡향 벡터, 0)

			반영광 코사인 법칙 = (빛의 세기 º 반사되는 방향 벡터 > 0) ? max(v º r, 0)ᴾ : 0
*/